version: "3.4"
services:
  caseprocessor:
    container_name: caseprocessor
    image: eu.gcr.io/ssdc-rm-ci/rm/ssdc-rm-caseprocessor
    external_links:
      - postgres
      - rabbitmq
      - uacqid
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:${POSTGRES_PORT}/${POSTGRES_HOST}?sslmode=disable
      - SPRING_RABBITMQ_HOST=${RABBIT_HOST}
      - SPRING_RABBITMQ_PORT=${RABBIT_PORT}
      - UACSERVICE_CONNECTION_HOST=${UAC_HOST}
      - UACSERVICE_CONNECTION_PORT=${UAC_PORT}
      - EXCEPTIONMANAGER_CONNECTION_HOST=${EXCEPTIONMANAGER_HOST}
      - EXCEPTIONMANAGER_CONNECTION_PORT=${EXCEPTIONMANAGER_PORT}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - CASEREFGENERATORKEY=${CASEREFGENERATORKEY}
    healthcheck:
      test: ["CMD", "find", "/tmp/case-processor-healthy", "-mmin", "-1"]
      interval: 60s
      timeout: 10s
      retries: 10
      start_period: 45s


  uacqid:
    container_name: uacqid
    image: eu.gcr.io/census-rm-ci/rm/census-rm-uac-qid-service
    ports:
      - "${UAC_PORT}:8164"
    external_links:
      - postgres
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:${POSTGRES_PORT}/${POSTGRES_HOST}?sslmode=disable
      - JAVA_TOOL_OPTIONS=-Xmx128m -Xdebug -Dspring.profiles.active=dev
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8164/actuator/info"]
      interval: 60s
      timeout: 10s
      retries: 4
      start_period: 30s

  exceptionmanager:
    container_name: exceptionmanager
    image: eu.gcr.io/census-rm-ci/rm/census-rm-exception-manager
    ports:
      - "${EXCEPTIONMANAGER_PORT}:8666"
    restart: always
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:${POSTGRES_PORT}/${POSTGRES_HOST}?sslmode=disable
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_RABBITMQ_HOST=${RABBIT_HOST}
      - SPRING_RABBITMQ_PORT=${RABBIT_PORT}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8666/actuator/info"]
      interval: 60s
      timeout: 10s
      retries: 4
      start_period: 30s


  printfilesvc:
      container_name: printfilesvc
      image: eu.gcr.io/census-rm-ci/rm/ssdc-rm-print-file-service:latest
      external_links:
        - rabbitmq
        - sftp
      environment:
        - RABBIT_QUEUE=Action.Printer
        - RABBIT_HOST=${RABBIT_HOST}
        - RABBIT_PORT=${RABBIT_PORT}
        - RABBIT_USERNAME=guest
        - RABBIT_PASSWORD=guest
        - RABBIT_VIRTUALHOST=/
        - READINESS_FILE_PATH=/tmp/ready
        - ENVIRONMENT=DEV
        - SFTP_HOST=sftp
        - SFTP_PORT=22
        - SFTP_USERNAME=centos
        - SFTP_KEY_FILENAME=/home/printfile/dummy_keys/dummy_rsa
        - SFTP_PASSPHRASE=dummy_secret
        - EXCEPTIONMANAGER_CONNECTION_HOST=${EXCEPTIONMANAGER_HOST}
        - EXCEPTIONMANAGER_CONNECTION_PORT=${EXCEPTIONMANAGER_PORT}
        - SUPPLIER_CONFIG_JSON_PATH=/home/printfile/dummy_supplier_config.json
        - SUPPLIER_KEY_DIRECTORY=/home/printfile/dummy_keys

      restart: always
      healthcheck:
        test: sh -c "[ -f /tmp/ready ]"
        interval: 10s
        timeout: 10s
        retries: 10
        start_period: 50s
      volumes:
        - ./dummy_keys:/home/printfile/dummy_keys
        - ./dummy_supplier_config.json:/home/printfile/dummy_supplier_config.json


networks:
  default:
    external:
      name: ssdcrmdockerdev_default
volumes:
  dummy_keys: