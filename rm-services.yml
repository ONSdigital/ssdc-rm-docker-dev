version: "3.4"
services:
  caseprocessor:
    container_name: caseprocessor
    image: eu.gcr.io/ssdc-rm-ci/rm/ssdc-rm-caseprocessor
    external_links:
      - postgres
      - rabbitmq
      - uacqid
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:${POSTGRES_PORT}/${POSTGRES_HOST}?sslmode=disable
      - SPRING_RABBITMQ_HOST=${RABBIT_HOST}
      - SPRING_RABBITMQ_PORT=${RABBIT_PORT}
      - UACSERVICE_CONNECTION_HOST=${UAC_HOST}
      - UACSERVICE_CONNECTION_PORT=${UAC_PORT}
      - EXCEPTIONMANAGER_CONNECTION_HOST=${EXCEPTIONMANAGER_HOST}
      - EXCEPTIONMANAGER_CONNECTION_PORT=${EXCEPTIONMANAGER_PORT}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - CASEREFGENERATORKEY=${CASEREFGENERATORKEY}
    healthcheck:
      test: [ "CMD", "find", "/tmp/case-processor-healthy", "-mmin", "-1" ]
      interval: 60s
      timeout: 10s
      retries: 10
      start_period: 45s


  caseapi:
    container_name: caseapi
    image: eu.gcr.io/ssdc-rm-ci/rm/ssdc-rm-case-api
    ports:
      - "${CASE_API_PORT}:8161"
    external_links:
      - postgres
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:${POSTGRES_PORT}/${POSTGRES_HOST}?sslmode=disable
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - UACSERVICE_CONNECTION_HOST=${UAC_HOST}
      - UACSERVICE_CONNECTION_PORT=${UAC_PORT}
      - SPRING_RABBITMQ_HOST=${RABBIT_HOST}
      - SPRING_RABBITMQ_PORT=${RABBIT_PORT}
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8161/actuator/health" ]
      interval: 60s
      timeout: 10s
      retries: 4
      start_period: 50s


  uacqid:
    container_name: uacqid
    image: eu.gcr.io/ssdc-rm-ci/rm/ssdc-rm-uac-qid-service
    ports:
      - "${UAC_PORT}:8164"
    external_links:
      - postgres
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:${POSTGRES_PORT}/${POSTGRES_HOST}?sslmode=disable
      - JAVA_TOOL_OPTIONS=-Xmx128m -Xdebug -Dspring.profiles.active=dev
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8164/actuator/health" ]
      interval: 60s
      timeout: 10s
      retries: 4
      start_period: 30s


  exceptionmanager:
    container_name: exceptionmanager
    image: eu.gcr.io/ssdc-rm-ci/rm/ssdc-rm-exception-manager
    ports:
      - "${EXCEPTIONMANAGER_PORT}:8666"
    restart: always
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:${POSTGRES_PORT}/${POSTGRES_HOST}?sslmode=disable
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_RABBITMQ_HOST=${RABBIT_HOST}
      - SPRING_RABBITMQ_PORT=${RABBIT_PORT}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8666/actuator/health" ]
      interval: 60s
      timeout: 10s
      retries: 4
      start_period: 30s


  printfilesvc:
    container_name: printfilesvc
    image: eu.gcr.io/ssdc-rm-ci/rm/ssdc-rm-print-file-service
    external_links:
      - rabbitmq
      - sftp
    environment:
      - RABBIT_QUEUE=caseProcessor.printFileSvc.printBatchRow
      - RABBIT_HOST=${RABBIT_HOST}
      - RABBIT_PORT=${RABBIT_PORT}
      - RABBIT_USERNAME=guest
      - RABBIT_PASSWORD=guest
      - RABBIT_VIRTUALHOST=/
      - READINESS_FILE_PATH=/tmp/ready
      - ENVIRONMENT=DEV
      - SFTP_HOST=sftp
      - SFTP_PORT=22
      - SFTP_USERNAME=centos
      - SFTP_KEY_FILENAME=/home/printfile/dummy_keys/dummy_rsa
      - SFTP_PASSPHRASE=dummy_secret
      - EXCEPTIONMANAGER_CONNECTION_HOST=${EXCEPTIONMANAGER_HOST}
      - EXCEPTIONMANAGER_CONNECTION_PORT=${EXCEPTIONMANAGER_PORT}
      - SUPPLIER_CONFIG_JSON_PATH=/home/printfile/dummy_supplier_config.json
      - SUPPLIER_KEY_DIRECTORY=/home/printfile/dummy_keys

    restart: always
    healthcheck:
      test: sh -c "[ -f /tmp/ready ]"
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 50s
    volumes:
      - ./dummy_keys:/home/printfile/dummy_keys
      - ./dummy_supplier_config.json:/home/printfile/dummy_supplier_config.json


  supporttool:
    container_name: supporttool
    image: eu.gcr.io/ssdc-rm-ci/rm/ssdc-rm-support-tool
    ports:
      - "9999:9999"
    external_links:
      - postgres
      - rabbitmq
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:${POSTGRES_PORT}/${POSTGRES_HOST}?sslmode=disable
      - SPRING_RABBITMQ_HOST=${RABBIT_HOST}
      - SPRING_RABBITMQ_PORT=${RABBIT_PORT}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9999/actuator/info" ]
      interval: 60s
      timeout: 10s
      retries: 4
      start_period: 50s


  pubsub-adapter:
    container_name: pubsubadapter
    image: eu.gcr.io/ssdc-rm-ci/rm/ssdc-rm-pubsub-adapter
    external_links:
      - rabbitmq
      - pubsub-emulator
    environment:
      - LOG_LEVEL=INFO
      - RABBIT_USERNAME=guest
      - RABBIT_PASSWORD=guest
      - RABBIT_HOST=${RABBIT_HOST}
      - RABBIT_PORT=${RABBIT_PORT}
      - EQ_RECEIPT_PROJECT=${EQ_RECEIPT_PROJECT}
      - READINESS_FILE_PATH=/tmp/ready
      - PUBSUB_EMULATOR_HOST=${PUBSUB_EMULATOR_HOSTNAME}:${PUBSUB_EMULATOR_PORT}
      - QUARANTINE_MESSAGE_URL=http://${EXCEPTIONMANAGER_HOST}:${EXCEPTIONMANAGER_PORT}/storeskippedmessage
    restart: always
    healthcheck:
      test: sh -c "[ -f /tmp/ready ]"
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 50s


networks:
  default:
    external:
      name: ssdcrmdockerdev_default
volumes:
  dummy_keys:
